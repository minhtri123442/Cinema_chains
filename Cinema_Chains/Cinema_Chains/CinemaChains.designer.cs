#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cinema_Chains
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cinema_Chains")]
	public partial class CinemaChainsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangLuong(BangLuong instance);
    partial void UpdateBangLuong(BangLuong instance);
    partial void DeleteBangLuong(BangLuong instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertChamCong(ChamCong instance);
    partial void UpdateChamCong(ChamCong instance);
    partial void DeleteChamCong(ChamCong instance);
    partial void InsertChiTietCombo(ChiTietCombo instance);
    partial void UpdateChiTietCombo(ChiTietCombo instance);
    partial void DeleteChiTietCombo(ChiTietCombo instance);
    partial void InsertChiTietHoaDonCombo(ChiTietHoaDonCombo instance);
    partial void UpdateChiTietHoaDonCombo(ChiTietHoaDonCombo instance);
    partial void DeleteChiTietHoaDonCombo(ChiTietHoaDonCombo instance);
    partial void InsertChiTietHoaDonDoAn(ChiTietHoaDonDoAn instance);
    partial void UpdateChiTietHoaDonDoAn(ChiTietHoaDonDoAn instance);
    partial void DeleteChiTietHoaDonDoAn(ChiTietHoaDonDoAn instance);
    partial void InsertChiTietHoaDonVe(ChiTietHoaDonVe instance);
    partial void UpdateChiTietHoaDonVe(ChiTietHoaDonVe instance);
    partial void DeleteChiTietHoaDonVe(ChiTietHoaDonVe instance);
    partial void InsertChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void UpdateChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void DeleteChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void InsertCombo(Combo instance);
    partial void UpdateCombo(Combo instance);
    partial void DeleteCombo(Combo instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertGiayPhepPhatHanh(GiayPhepPhatHanh instance);
    partial void UpdateGiayPhepPhatHanh(GiayPhepPhatHanh instance);
    partial void DeleteGiayPhepPhatHanh(GiayPhepPhatHanh instance);
    partial void InsertHoaDonDoAn(HoaDonDoAn instance);
    partial void UpdateHoaDonDoAn(HoaDonDoAn instance);
    partial void DeleteHoaDonDoAn(HoaDonDoAn instance);
    partial void InsertHoaDonVe(HoaDonVe instance);
    partial void UpdateHoaDonVe(HoaDonVe instance);
    partial void DeleteHoaDonVe(HoaDonVe instance);
    partial void InsertHopDong(HopDong instance);
    partial void UpdateHopDong(HopDong instance);
    partial void DeleteHopDong(HopDong instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertKhuyenMai_Phim(KhuyenMai_Phim instance);
    partial void UpdateKhuyenMai_Phim(KhuyenMai_Phim instance);
    partial void DeleteKhuyenMai_Phim(KhuyenMai_Phim instance);
    partial void InsertLichChieu(LichChieu instance);
    partial void UpdateLichChieu(LichChieu instance);
    partial void DeleteLichChieu(LichChieu instance);
    partial void InsertMatHang(MatHang instance);
    partial void UpdateMatHang(MatHang instance);
    partial void DeleteMatHang(MatHang instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhaPhanPhoi(NhaPhanPhoi instance);
    partial void UpdateNhaPhanPhoi(NhaPhanPhoi instance);
    partial void DeleteNhaPhanPhoi(NhaPhanPhoi instance);
    partial void InsertPhanPhoiPhim(PhanPhoiPhim instance);
    partial void UpdatePhanPhoiPhim(PhanPhoiPhim instance);
    partial void DeletePhanPhoiPhim(PhanPhoiPhim instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertPhim_TheLoai(Phim_TheLoai instance);
    partial void UpdatePhim_TheLoai(Phim_TheLoai instance);
    partial void DeletePhim_TheLoai(Phim_TheLoai instance);
    partial void InsertPhongChieu(PhongChieu instance);
    partial void UpdatePhongChieu(PhongChieu instance);
    partial void DeletePhongChieu(PhongChieu instance);
    partial void InsertRap(Rap instance);
    partial void UpdateRap(Rap instance);
    partial void DeleteRap(Rap instance);
    #endregion
		
		public CinemaChainsDataContext() : 
				base(global::Cinema_Chains.Properties.Settings.Default.Cinema_ChainsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaChainsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaChainsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaChainsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaChainsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangLuong> BangLuongs
		{
			get
			{
				return this.GetTable<BangLuong>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<ChamCong> ChamCongs
		{
			get
			{
				return this.GetTable<ChamCong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this.GetTable<ChiTietCombo>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonCombo> ChiTietHoaDonCombos
		{
			get
			{
				return this.GetTable<ChiTietHoaDonCombo>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonDoAn> ChiTietHoaDonDoAns
		{
			get
			{
				return this.GetTable<ChiTietHoaDonDoAn>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonVe> ChiTietHoaDonVes
		{
			get
			{
				return this.GetTable<ChiTietHoaDonVe>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<Combo> Combos
		{
			get
			{
				return this.GetTable<Combo>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<GiayPhepPhatHanh> GiayPhepPhatHanhs
		{
			get
			{
				return this.GetTable<GiayPhepPhatHanh>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonDoAn> HoaDonDoAns
		{
			get
			{
				return this.GetTable<HoaDonDoAn>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonVe> HoaDonVes
		{
			get
			{
				return this.GetTable<HoaDonVe>();
			}
		}
		
		public System.Data.Linq.Table<HopDong> HopDongs
		{
			get
			{
				return this.GetTable<HopDong>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai_Phim> KhuyenMai_Phims
		{
			get
			{
				return this.GetTable<KhuyenMai_Phim>();
			}
		}
		
		public System.Data.Linq.Table<LichChieu> LichChieus
		{
			get
			{
				return this.GetTable<LichChieu>();
			}
		}
		
		public System.Data.Linq.Table<MatHang> MatHangs
		{
			get
			{
				return this.GetTable<MatHang>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhaPhanPhoi> NhaPhanPhois
		{
			get
			{
				return this.GetTable<NhaPhanPhoi>();
			}
		}
		
		public System.Data.Linq.Table<PhanPhoiPhim> PhanPhoiPhims
		{
			get
			{
				return this.GetTable<PhanPhoiPhim>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<Phim_TheLoai> Phim_TheLoais
		{
			get
			{
				return this.GetTable<Phim_TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<PhongChieu> PhongChieus
		{
			get
			{
				return this.GetTable<PhongChieu>();
			}
		}
		
		public System.Data.Linq.Table<Rap> Raps
		{
			get
			{
				return this.GetTable<Rap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangLuong")]
	public partial class BangLuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLuong;
		
		private int _MaNV;
		
		private int _Thang;
		
		private int _Nam;
		
		private int _SoNgayCong;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLuongChanging(int value);
    partial void OnMaLuongChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnSoNgayCongChanging(int value);
    partial void OnSoNgayCongChanged();
    #endregion
		
		public BangLuong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLuong
		{
			get
			{
				return this._MaLuong;
			}
			set
			{
				if ((this._MaLuong != value))
				{
					this.OnMaLuongChanging(value);
					this.SendPropertyChanging();
					this._MaLuong = value;
					this.SendPropertyChanged("MaLuong");
					this.OnMaLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL")]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL")]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgayCong", DbType="Int NOT NULL")]
		public int SoNgayCong
		{
			get
			{
				return this._SoNgayCong;
			}
			set
			{
				if ((this._SoNgayCong != value))
				{
					this.OnSoNgayCongChanging(value);
					this.SendPropertyChanging();
					this._SoNgayCong = value;
					this.SendPropertyChanged("SoNgayCong");
					this.OnSoNgayCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangLuong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.BangLuongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.BangLuongs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<Phim_TheLoai> _Phim_TheLoais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(int value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._Phim_TheLoais = new EntitySet<Phim_TheLoai>(new Action<Phim_TheLoai>(this.attach_Phim_TheLoais), new Action<Phim_TheLoai>(this.detach_Phim_TheLoais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim_TheLoai", Storage="_Phim_TheLoais", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<Phim_TheLoai> Phim_TheLoais
		{
			get
			{
				return this._Phim_TheLoais;
			}
			set
			{
				this._Phim_TheLoais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phim_TheLoais(Phim_TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Phim_TheLoais(Phim_TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChamCong")]
	public partial class ChamCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCC;
		
		private int _MaNV;
		
		private System.DateTime _Ngay;
		
		private string _TrangThai;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCCChanging(int value);
    partial void OnMaCCChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public ChamCong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCC
		{
			get
			{
				return this._MaCC;
			}
			set
			{
				if ((this._MaCC != value))
				{
					this.OnMaCCChanging(value);
					this.SendPropertyChanging();
					this._MaCC = value;
					this.SendPropertyChanged("MaCC");
					this.OnMaCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ChamCong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ChamCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ChamCongs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietCombo")]
	public partial class ChiTietCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietCombo;
		
		private int _MaCombo;
		
		private int _MaHang;
		
		private EntityRef<Combo> _Combo;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietComboChanging(int value);
    partial void OnMaChiTietComboChanged();
    partial void OnMaComboChanging(int value);
    partial void OnMaComboChanged();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    #endregion
		
		public ChiTietCombo()
		{
			this._Combo = default(EntityRef<Combo>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietCombo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietCombo
		{
			get
			{
				return this._MaChiTietCombo;
			}
			set
			{
				if ((this._MaChiTietCombo != value))
				{
					this.OnMaChiTietComboChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietCombo = value;
					this.SendPropertyChanged("MaChiTietCombo");
					this.OnMaChiTietComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", DbType="Int NOT NULL")]
		public int MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					if (this._Combo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int NOT NULL")]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietCombo", Storage="_Combo", ThisKey="MaCombo", OtherKey="MaCombo", IsForeignKey=true)]
		public Combo Combo
		{
			get
			{
				return this._Combo.Entity;
			}
			set
			{
				Combo previousValue = this._Combo.Entity;
				if (((previousValue != value) 
							|| (this._Combo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combo.Entity = null;
						previousValue.ChiTietCombos.Remove(this);
					}
					this._Combo.Entity = value;
					if ((value != null))
					{
						value.ChiTietCombos.Add(this);
						this._MaCombo = value.MaCombo;
					}
					else
					{
						this._MaCombo = default(int);
					}
					this.SendPropertyChanged("Combo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietCombo", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietCombos.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietCombos.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonCombo")]
	public partial class ChiTietHoaDonCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCTCombo;
		
		private int _MaHDDoAn;
		
		private int _MaCombo;
		
		private int _SoLuong;
		
		private EntityRef<Combo> _Combo;
		
		private EntityRef<HoaDonDoAn> _HoaDonDoAn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTComboChanging(int value);
    partial void OnMaCTComboChanged();
    partial void OnMaHDDoAnChanging(int value);
    partial void OnMaHDDoAnChanged();
    partial void OnMaComboChanging(int value);
    partial void OnMaComboChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHoaDonCombo()
		{
			this._Combo = default(EntityRef<Combo>);
			this._HoaDonDoAn = default(EntityRef<HoaDonDoAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTCombo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTCombo
		{
			get
			{
				return this._MaCTCombo;
			}
			set
			{
				if ((this._MaCTCombo != value))
				{
					this.OnMaCTComboChanging(value);
					this.SendPropertyChanging();
					this._MaCTCombo = value;
					this.SendPropertyChanged("MaCTCombo");
					this.OnMaCTComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDDoAn", DbType="Int NOT NULL")]
		public int MaHDDoAn
		{
			get
			{
				return this._MaHDDoAn;
			}
			set
			{
				if ((this._MaHDDoAn != value))
				{
					if (this._HoaDonDoAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDDoAnChanging(value);
					this.SendPropertyChanging();
					this._MaHDDoAn = value;
					this.SendPropertyChanged("MaHDDoAn");
					this.OnMaHDDoAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", DbType="Int NOT NULL")]
		public int MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					if (this._Combo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietHoaDonCombo", Storage="_Combo", ThisKey="MaCombo", OtherKey="MaCombo", IsForeignKey=true)]
		public Combo Combo
		{
			get
			{
				return this._Combo.Entity;
			}
			set
			{
				Combo previousValue = this._Combo.Entity;
				if (((previousValue != value) 
							|| (this._Combo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combo.Entity = null;
						previousValue.ChiTietHoaDonCombos.Remove(this);
					}
					this._Combo.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonCombos.Add(this);
						this._MaCombo = value.MaCombo;
					}
					else
					{
						this._MaCombo = default(int);
					}
					this.SendPropertyChanged("Combo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonDoAn_ChiTietHoaDonCombo", Storage="_HoaDonDoAn", ThisKey="MaHDDoAn", OtherKey="MaHDDoAn", IsForeignKey=true)]
		public HoaDonDoAn HoaDonDoAn
		{
			get
			{
				return this._HoaDonDoAn.Entity;
			}
			set
			{
				HoaDonDoAn previousValue = this._HoaDonDoAn.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonDoAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonDoAn.Entity = null;
						previousValue.ChiTietHoaDonCombos.Remove(this);
					}
					this._HoaDonDoAn.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonCombos.Add(this);
						this._MaHDDoAn = value.MaHDDoAn;
					}
					else
					{
						this._MaHDDoAn = default(int);
					}
					this.SendPropertyChanged("HoaDonDoAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonDoAn")]
	public partial class ChiTietHoaDonDoAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCTDoAn;
		
		private System.Nullable<int> _MaHDDoAn;
		
		private System.Nullable<int> _MaHang;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HoaDonDoAn> _HoaDonDoAn;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTDoAnChanging(int value);
    partial void OnMaCTDoAnChanged();
    partial void OnMaHDDoAnChanging(System.Nullable<int> value);
    partial void OnMaHDDoAnChanged();
    partial void OnMaHangChanging(System.Nullable<int> value);
    partial void OnMaHangChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHoaDonDoAn()
		{
			this._HoaDonDoAn = default(EntityRef<HoaDonDoAn>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDoAn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTDoAn
		{
			get
			{
				return this._MaCTDoAn;
			}
			set
			{
				if ((this._MaCTDoAn != value))
				{
					this.OnMaCTDoAnChanging(value);
					this.SendPropertyChanging();
					this._MaCTDoAn = value;
					this.SendPropertyChanged("MaCTDoAn");
					this.OnMaCTDoAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDDoAn", DbType="Int")]
		public System.Nullable<int> MaHDDoAn
		{
			get
			{
				return this._MaHDDoAn;
			}
			set
			{
				if ((this._MaHDDoAn != value))
				{
					if (this._HoaDonDoAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDDoAnChanging(value);
					this.SendPropertyChanging();
					this._MaHDDoAn = value;
					this.SendPropertyChanged("MaHDDoAn");
					this.OnMaHDDoAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int")]
		public System.Nullable<int> MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonDoAn_ChiTietHoaDonDoAn", Storage="_HoaDonDoAn", ThisKey="MaHDDoAn", OtherKey="MaHDDoAn", IsForeignKey=true)]
		public HoaDonDoAn HoaDonDoAn
		{
			get
			{
				return this._HoaDonDoAn.Entity;
			}
			set
			{
				HoaDonDoAn previousValue = this._HoaDonDoAn.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonDoAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonDoAn.Entity = null;
						previousValue.ChiTietHoaDonDoAns.Remove(this);
					}
					this._HoaDonDoAn.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonDoAns.Add(this);
						this._MaHDDoAn = value.MaHDDoAn;
					}
					else
					{
						this._MaHDDoAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDonDoAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonDoAn", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietHoaDonDoAns.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonDoAns.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonVe")]
	public partial class ChiTietHoaDonVe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCTVe;
		
		private System.Nullable<int> _MaHDVe;
		
		private System.Nullable<int> _MaLichChieu;
		
		private System.Nullable<int> _MaGhe;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<HoaDonVe> _HoaDonVe;
		
		private EntityRef<LichChieu> _LichChieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTVeChanging(int value);
    partial void OnMaCTVeChanged();
    partial void OnMaHDVeChanging(System.Nullable<int> value);
    partial void OnMaHDVeChanged();
    partial void OnMaLichChieuChanging(System.Nullable<int> value);
    partial void OnMaLichChieuChanged();
    partial void OnMaGheChanging(System.Nullable<int> value);
    partial void OnMaGheChanged();
    #endregion
		
		public ChiTietHoaDonVe()
		{
			this._Ghe = default(EntityRef<Ghe>);
			this._HoaDonVe = default(EntityRef<HoaDonVe>);
			this._LichChieu = default(EntityRef<LichChieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTVe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTVe
		{
			get
			{
				return this._MaCTVe;
			}
			set
			{
				if ((this._MaCTVe != value))
				{
					this.OnMaCTVeChanging(value);
					this.SendPropertyChanging();
					this._MaCTVe = value;
					this.SendPropertyChanged("MaCTVe");
					this.OnMaCTVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDVe", DbType="Int")]
		public System.Nullable<int> MaHDVe
		{
			get
			{
				return this._MaHDVe;
			}
			set
			{
				if ((this._MaHDVe != value))
				{
					if (this._HoaDonVe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDVeChanging(value);
					this.SendPropertyChanging();
					this._MaHDVe = value;
					this.SendPropertyChanged("MaHDVe");
					this.OnMaHDVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLichChieu", DbType="Int")]
		public System.Nullable<int> MaLichChieu
		{
			get
			{
				return this._MaLichChieu;
			}
			set
			{
				if ((this._MaLichChieu != value))
				{
					if (this._LichChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLichChieuChanging(value);
					this.SendPropertyChanging();
					this._MaLichChieu = value;
					this.SendPropertyChanged("MaLichChieu");
					this.OnMaLichChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGhe", DbType="Int")]
		public System.Nullable<int> MaGhe
		{
			get
			{
				return this._MaGhe;
			}
			set
			{
				if ((this._MaGhe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGheChanging(value);
					this.SendPropertyChanging();
					this._MaGhe = value;
					this.SendPropertyChanged("MaGhe");
					this.OnMaGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_ChiTietHoaDonVe", Storage="_Ghe", ThisKey="MaGhe", OtherKey="MaGhe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.ChiTietHoaDonVes.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonVes.Add(this);
						this._MaGhe = value.MaGhe;
					}
					else
					{
						this._MaGhe = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonVe_ChiTietHoaDonVe", Storage="_HoaDonVe", ThisKey="MaHDVe", OtherKey="MaHDVe", IsForeignKey=true)]
		public HoaDonVe HoaDonVe
		{
			get
			{
				return this._HoaDonVe.Entity;
			}
			set
			{
				HoaDonVe previousValue = this._HoaDonVe.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonVe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonVe.Entity = null;
						previousValue.ChiTietHoaDonVes.Remove(this);
					}
					this._HoaDonVe.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonVes.Add(this);
						this._MaHDVe = value.MaHDVe;
					}
					else
					{
						this._MaHDVe = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDonVe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieu_ChiTietHoaDonVe", Storage="_LichChieu", ThisKey="MaLichChieu", OtherKey="MaLichChieu", IsForeignKey=true)]
		public LichChieu LichChieu
		{
			get
			{
				return this._LichChieu.Entity;
			}
			set
			{
				LichChieu previousValue = this._LichChieu.Entity;
				if (((previousValue != value) 
							|| (this._LichChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichChieu.Entity = null;
						previousValue.ChiTietHoaDonVes.Remove(this);
					}
					this._LichChieu.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonVes.Add(this);
						this._MaLichChieu = value.MaLichChieu;
					}
					else
					{
						this._MaLichChieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("LichChieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhap")]
	public partial class ChiTietPhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietNhap;
		
		private int _MaPhieuNhap;
		
		private int _MaHang;
		
		private int _SoLuongNhap;
		
		private EntityRef<MatHang> _MatHang;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietNhapChanging(int value);
    partial void OnMaChiTietNhapChanged();
    partial void OnMaPhieuNhapChanging(int value);
    partial void OnMaPhieuNhapChanged();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnSoLuongNhapChanging(int value);
    partial void OnSoLuongNhapChanged();
    #endregion
		
		public ChiTietPhieuNhap()
		{
			this._MatHang = default(EntityRef<MatHang>);
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietNhap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietNhap
		{
			get
			{
				return this._MaChiTietNhap;
			}
			set
			{
				if ((this._MaChiTietNhap != value))
				{
					this.OnMaChiTietNhapChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietNhap = value;
					this.SendPropertyChanged("MaChiTietNhap");
					this.OnMaChiTietNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="Int NOT NULL")]
		public int MaPhieuNhap
		{
			get
			{
				return this._MaPhieuNhap;
			}
			set
			{
				if ((this._MaPhieuNhap != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuNhap = value;
					this.SendPropertyChanged("MaPhieuNhap");
					this.OnMaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int NOT NULL")]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int NOT NULL")]
		public int SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietPhieuNhap", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_PhieuNhap", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._MaPhieuNhap = value.MaPhieuNhap;
					}
					else
					{
						this._MaPhieuNhap = default(int);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Combo")]
	public partial class Combo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCombo;
		
		private string _TenCombo;
		
		private decimal _Gia;
		
		private string _MoTa;
		
		private EntitySet<ChiTietCombo> _ChiTietCombos;
		
		private EntitySet<ChiTietHoaDonCombo> _ChiTietHoaDonCombos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaComboChanging(int value);
    partial void OnMaComboChanged();
    partial void OnTenComboChanging(string value);
    partial void OnTenComboChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public Combo()
		{
			this._ChiTietCombos = new EntitySet<ChiTietCombo>(new Action<ChiTietCombo>(this.attach_ChiTietCombos), new Action<ChiTietCombo>(this.detach_ChiTietCombos));
			this._ChiTietHoaDonCombos = new EntitySet<ChiTietHoaDonCombo>(new Action<ChiTietHoaDonCombo>(this.attach_ChiTietHoaDonCombos), new Action<ChiTietHoaDonCombo>(this.detach_ChiTietHoaDonCombos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCombo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenCombo
		{
			get
			{
				return this._TenCombo;
			}
			set
			{
				if ((this._TenCombo != value))
				{
					this.OnTenComboChanging(value);
					this.SendPropertyChanging();
					this._TenCombo = value;
					this.SendPropertyChanged("TenCombo");
					this.OnTenComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietCombo", Storage="_ChiTietCombos", ThisKey="MaCombo", OtherKey="MaCombo")]
		public EntitySet<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this._ChiTietCombos;
			}
			set
			{
				this._ChiTietCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietHoaDonCombo", Storage="_ChiTietHoaDonCombos", ThisKey="MaCombo", OtherKey="MaCombo")]
		public EntitySet<ChiTietHoaDonCombo> ChiTietHoaDonCombos
		{
			get
			{
				return this._ChiTietHoaDonCombos;
			}
			set
			{
				this._ChiTietHoaDonCombos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = this;
		}
		
		private void detach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = null;
		}
		
		private void attach_ChiTietHoaDonCombos(ChiTietHoaDonCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = this;
		}
		
		private void detach_ChiTietHoaDonCombos(ChiTietHoaDonCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDG;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaPhim;
		
		private System.Nullable<int> _SoSao;
		
		private string _BinhLuan;
		
		private System.Nullable<System.DateTime> _NgayDanhGia;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDGChanging(int value);
    partial void OnMaDGChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnSoSaoChanging(System.Nullable<int> value);
    partial void OnSoSaoChanged();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnNgayDanhGiaChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDanhGiaChanged();
    #endregion
		
		public DanhGia()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Int")]
		public System.Nullable<int> SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(500)")]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDanhGia", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDanhGia
		{
			get
			{
				return this._NgayDanhGia;
			}
			set
			{
				if ((this._NgayDanhGia != value))
				{
					this.OnNgayDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._NgayDanhGia = value;
					this.SendPropertyChanged("NgayDanhGia");
					this.OnNgayDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DanhGia", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_DanhGia", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGhe;
		
		private System.Nullable<int> _MaPhong;
		
		private string _SoGhe;
		
		private string _TrangThai;
		
		private EntitySet<ChiTietHoaDonVe> _ChiTietHoaDonVes;
		
		private EntityRef<PhongChieu> _PhongChieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGheChanging(int value);
    partial void OnMaGheChanged();
    partial void OnMaPhongChanging(System.Nullable<int> value);
    partial void OnMaPhongChanged();
    partial void OnSoGheChanging(string value);
    partial void OnSoGheChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Ghe()
		{
			this._ChiTietHoaDonVes = new EntitySet<ChiTietHoaDonVe>(new Action<ChiTietHoaDonVe>(this.attach_ChiTietHoaDonVes), new Action<ChiTietHoaDonVe>(this.detach_ChiTietHoaDonVes));
			this._PhongChieu = default(EntityRef<PhongChieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGhe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGhe
		{
			get
			{
				return this._MaGhe;
			}
			set
			{
				if ((this._MaGhe != value))
				{
					this.OnMaGheChanging(value);
					this.SendPropertyChanging();
					this._MaGhe = value;
					this.SendPropertyChanged("MaGhe");
					this.OnMaGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int")]
		public System.Nullable<int> MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PhongChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="NVarChar(10)")]
		public string SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_ChiTietHoaDonVe", Storage="_ChiTietHoaDonVes", ThisKey="MaGhe", OtherKey="MaGhe")]
		public EntitySet<ChiTietHoaDonVe> ChiTietHoaDonVes
		{
			get
			{
				return this._ChiTietHoaDonVes;
			}
			set
			{
				this._ChiTietHoaDonVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieu_Ghe", Storage="_PhongChieu", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public PhongChieu PhongChieu
		{
			get
			{
				return this._PhongChieu.Entity;
			}
			set
			{
				PhongChieu previousValue = this._PhongChieu.Entity;
				if (((previousValue != value) 
							|| (this._PhongChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongChieu.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._PhongChieu.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongChieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiayPhepPhatHanh")]
	public partial class GiayPhepPhatHanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGiayPhep;
		
		private string _SoGiayPhep;
		
		private System.Nullable<System.DateTime> _NgayCap;
		
		private System.Nullable<System.DateTime> _HanSuDung;
		
		private string _CoQuanCap;
		
		private System.Nullable<int> _MaPhim;
		
		private System.Nullable<int> _MaNPP;
		
		private EntityRef<NhaPhanPhoi> _NhaPhanPhoi;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiayPhepChanging(int value);
    partial void OnMaGiayPhepChanged();
    partial void OnSoGiayPhepChanging(string value);
    partial void OnSoGiayPhepChanged();
    partial void OnNgayCapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapChanged();
    partial void OnHanSuDungChanging(System.Nullable<System.DateTime> value);
    partial void OnHanSuDungChanged();
    partial void OnCoQuanCapChanging(string value);
    partial void OnCoQuanCapChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnMaNPPChanging(System.Nullable<int> value);
    partial void OnMaNPPChanged();
    #endregion
		
		public GiayPhepPhatHanh()
		{
			this._NhaPhanPhoi = default(EntityRef<NhaPhanPhoi>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiayPhep", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGiayPhep
		{
			get
			{
				return this._MaGiayPhep;
			}
			set
			{
				if ((this._MaGiayPhep != value))
				{
					this.OnMaGiayPhepChanging(value);
					this.SendPropertyChanging();
					this._MaGiayPhep = value;
					this.SendPropertyChanged("MaGiayPhep");
					this.OnMaGiayPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGiayPhep", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoGiayPhep
		{
			get
			{
				return this._SoGiayPhep;
			}
			set
			{
				if ((this._SoGiayPhep != value))
				{
					this.OnSoGiayPhepChanging(value);
					this.SendPropertyChanging();
					this._SoGiayPhep = value;
					this.SendPropertyChanged("SoGiayPhep");
					this.OnSoGiayPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this.OnNgayCapChanging(value);
					this.SendPropertyChanging();
					this._NgayCap = value;
					this.SendPropertyChanged("NgayCap");
					this.OnNgayCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanSuDung", DbType="Date")]
		public System.Nullable<System.DateTime> HanSuDung
		{
			get
			{
				return this._HanSuDung;
			}
			set
			{
				if ((this._HanSuDung != value))
				{
					this.OnHanSuDungChanging(value);
					this.SendPropertyChanging();
					this._HanSuDung = value;
					this.SendPropertyChanged("HanSuDung");
					this.OnHanSuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoQuanCap", DbType="NVarChar(100)")]
		public string CoQuanCap
		{
			get
			{
				return this._CoQuanCap;
			}
			set
			{
				if ((this._CoQuanCap != value))
				{
					this.OnCoQuanCapChanging(value);
					this.SendPropertyChanging();
					this._CoQuanCap = value;
					this.SendPropertyChanged("CoQuanCap");
					this.OnCoQuanCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPP", DbType="Int")]
		public System.Nullable<int> MaNPP
		{
			get
			{
				return this._MaNPP;
			}
			set
			{
				if ((this._MaNPP != value))
				{
					if (this._NhaPhanPhoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNPPChanging(value);
					this.SendPropertyChanging();
					this._MaNPP = value;
					this.SendPropertyChanged("MaNPP");
					this.OnMaNPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaPhanPhoi_GiayPhepPhatHanh", Storage="_NhaPhanPhoi", ThisKey="MaNPP", OtherKey="MaNPP", IsForeignKey=true)]
		public NhaPhanPhoi NhaPhanPhoi
		{
			get
			{
				return this._NhaPhanPhoi.Entity;
			}
			set
			{
				NhaPhanPhoi previousValue = this._NhaPhanPhoi.Entity;
				if (((previousValue != value) 
							|| (this._NhaPhanPhoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaPhanPhoi.Entity = null;
						previousValue.GiayPhepPhatHanhs.Remove(this);
					}
					this._NhaPhanPhoi.Entity = value;
					if ((value != null))
					{
						value.GiayPhepPhatHanhs.Add(this);
						this._MaNPP = value.MaNPP;
					}
					else
					{
						this._MaNPP = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaPhanPhoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_GiayPhepPhatHanh", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.GiayPhepPhatHanhs.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.GiayPhepPhatHanhs.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonDoAn")]
	public partial class HoaDonDoAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHDDoAn;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _PhuongThucThanhToan;
		
		private EntitySet<ChiTietHoaDonCombo> _ChiTietHoaDonCombos;
		
		private EntitySet<ChiTietHoaDonDoAn> _ChiTietHoaDonDoAns;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDDoAnChanging(int value);
    partial void OnMaHDDoAnChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    #endregion
		
		public HoaDonDoAn()
		{
			this._ChiTietHoaDonCombos = new EntitySet<ChiTietHoaDonCombo>(new Action<ChiTietHoaDonCombo>(this.attach_ChiTietHoaDonCombos), new Action<ChiTietHoaDonCombo>(this.detach_ChiTietHoaDonCombos));
			this._ChiTietHoaDonDoAns = new EntitySet<ChiTietHoaDonDoAn>(new Action<ChiTietHoaDonDoAn>(this.attach_ChiTietHoaDonDoAns), new Action<ChiTietHoaDonDoAn>(this.detach_ChiTietHoaDonDoAns));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDDoAn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHDDoAn
		{
			get
			{
				return this._MaHDDoAn;
			}
			set
			{
				if ((this._MaHDDoAn != value))
				{
					this.OnMaHDDoAnChanging(value);
					this.SendPropertyChanging();
					this._MaHDDoAn = value;
					this.SendPropertyChanged("MaHDDoAn");
					this.OnMaHDDoAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(50)")]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonDoAn_ChiTietHoaDonCombo", Storage="_ChiTietHoaDonCombos", ThisKey="MaHDDoAn", OtherKey="MaHDDoAn")]
		public EntitySet<ChiTietHoaDonCombo> ChiTietHoaDonCombos
		{
			get
			{
				return this._ChiTietHoaDonCombos;
			}
			set
			{
				this._ChiTietHoaDonCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonDoAn_ChiTietHoaDonDoAn", Storage="_ChiTietHoaDonDoAns", ThisKey="MaHDDoAn", OtherKey="MaHDDoAn")]
		public EntitySet<ChiTietHoaDonDoAn> ChiTietHoaDonDoAns
		{
			get
			{
				return this._ChiTietHoaDonDoAns;
			}
			set
			{
				this._ChiTietHoaDonDoAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonDoAn", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonDoAns.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonDoAns.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonDoAn", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonDoAns.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonDoAns.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonCombos(ChiTietHoaDonCombo entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonDoAn = this;
		}
		
		private void detach_ChiTietHoaDonCombos(ChiTietHoaDonCombo entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonDoAn = null;
		}
		
		private void attach_ChiTietHoaDonDoAns(ChiTietHoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonDoAn = this;
		}
		
		private void detach_ChiTietHoaDonDoAns(ChiTietHoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonDoAn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonVe")]
	public partial class HoaDonVe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHDVe;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _PhuongThucThanhToan;
		
		private EntitySet<ChiTietHoaDonVe> _ChiTietHoaDonVes;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDVeChanging(int value);
    partial void OnMaHDVeChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    #endregion
		
		public HoaDonVe()
		{
			this._ChiTietHoaDonVes = new EntitySet<ChiTietHoaDonVe>(new Action<ChiTietHoaDonVe>(this.attach_ChiTietHoaDonVes), new Action<ChiTietHoaDonVe>(this.detach_ChiTietHoaDonVes));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDVe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHDVe
		{
			get
			{
				return this._MaHDVe;
			}
			set
			{
				if ((this._MaHDVe != value))
				{
					this.OnMaHDVeChanging(value);
					this.SendPropertyChanging();
					this._MaHDVe = value;
					this.SendPropertyChanged("MaHDVe");
					this.OnMaHDVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(50)")]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonVe_ChiTietHoaDonVe", Storage="_ChiTietHoaDonVes", ThisKey="MaHDVe", OtherKey="MaHDVe")]
		public EntitySet<ChiTietHoaDonVe> ChiTietHoaDonVes
		{
			get
			{
				return this._ChiTietHoaDonVes;
			}
			set
			{
				this._ChiTietHoaDonVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonVe", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonVes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonVes.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonVe", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonVes.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonVes.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonVe = this;
		}
		
		private void detach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonVe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopDong")]
	public partial class HopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHDLD;
		
		private int _MaNV;
		
		private string _LoaiHopDong;
		
		private System.DateTime _NgayKy;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private decimal _LuongCoBan;
		
		private System.Nullable<decimal> _PhuCap;
		
		private string _GhiChu;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDLDChanging(int value);
    partial void OnMaHDLDChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnLoaiHopDongChanging(string value);
    partial void OnLoaiHopDongChanged();
    partial void OnNgayKyChanging(System.DateTime value);
    partial void OnNgayKyChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnLuongCoBanChanging(decimal value);
    partial void OnLuongCoBanChanged();
    partial void OnPhuCapChanging(System.Nullable<decimal> value);
    partial void OnPhuCapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public HopDong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDLD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHDLD
		{
			get
			{
				return this._MaHDLD;
			}
			set
			{
				if ((this._MaHDLD != value))
				{
					this.OnMaHDLDChanging(value);
					this.SendPropertyChanging();
					this._MaHDLD = value;
					this.SendPropertyChanged("MaHDLD");
					this.OnMaHDLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHopDong", DbType="NVarChar(100)")]
		public string LoaiHopDong
		{
			get
			{
				return this._LoaiHopDong;
			}
			set
			{
				if ((this._LoaiHopDong != value))
				{
					this.OnLoaiHopDongChanging(value);
					this.SendPropertyChanging();
					this._LoaiHopDong = value;
					this.SendPropertyChanged("LoaiHopDong");
					this.OnLoaiHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKy", DbType="Date NOT NULL")]
		public System.DateTime NgayKy
		{
			get
			{
				return this._NgayKy;
			}
			set
			{
				if ((this._NgayKy != value))
				{
					this.OnNgayKyChanging(value);
					this.SendPropertyChanging();
					this._NgayKy = value;
					this.SendPropertyChanged("NgayKy");
					this.OnNgayKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCoBan", DbType="Decimal(18,0) NOT NULL")]
		public decimal LuongCoBan
		{
			get
			{
				return this._LuongCoBan;
			}
			set
			{
				if ((this._LuongCoBan != value))
				{
					this.OnLuongCoBanChanging(value);
					this.SendPropertyChanging();
					this._LuongCoBan = value;
					this.SendPropertyChanged("LuongCoBan");
					this.OnLuongCoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HopDong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HopDongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HopDongs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _DienThoai;
		
		private string _Email;
		
		private System.Nullable<int> _DiemTichLuy;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<HoaDonDoAn> _HoaDonDoAns;
		
		private EntitySet<HoaDonVe> _HoaDonVes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiemTichLuyChanging(System.Nullable<int> value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public KhachHang()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._HoaDonDoAns = new EntitySet<HoaDonDoAn>(new Action<HoaDonDoAn>(this.attach_HoaDonDoAns), new Action<HoaDonDoAn>(this.detach_HoaDonDoAns));
			this._HoaDonVes = new EntitySet<HoaDonVe>(new Action<HoaDonVe>(this.attach_HoaDonVes), new Action<HoaDonVe>(this.detach_HoaDonVes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int")]
		public System.Nullable<int> DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DanhGia", Storage="_DanhGias", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonDoAn", Storage="_HoaDonDoAns", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HoaDonDoAn> HoaDonDoAns
		{
			get
			{
				return this._HoaDonDoAns;
			}
			set
			{
				this._HoaDonDoAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonVe", Storage="_HoaDonVes", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HoaDonVe> HoaDonVes
		{
			get
			{
				return this._HoaDonVes;
			}
			set
			{
				this._HoaDonVes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoaDonDoAns(HoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDonDoAns(HoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoaDonVes(HoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDonVes(HoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKho;
		
		private int _MaHang;
		
		private int _SoLuongTon;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoChanging(int value);
    partial void OnMaKhoChanged();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnSoLuongTonChanging(int value);
    partial void OnSoLuongTonChanged();
    #endregion
		
		public Kho()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKho
		{
			get
			{
				return this._MaKho;
			}
			set
			{
				if ((this._MaKho != value))
				{
					this.OnMaKhoChanging(value);
					this.SendPropertyChanging();
					this._MaKho = value;
					this.SendPropertyChanged("MaKho");
					this.OnMaKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int NOT NULL")]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int NOT NULL")]
		public int SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_Kho", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.Khos.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.Khos.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKM;
		
		private string _TieuDe;
		
		private string _MoTa;
		
		private System.Nullable<decimal> _PhanTramGiam;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntitySet<KhuyenMai_Phim> _KhuyenMai_Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKMChanging(int value);
    partial void OnMaKMChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnPhanTramGiamChanging(System.Nullable<decimal> value);
    partial void OnPhanTramGiamChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._KhuyenMai_Phims = new EntitySet<KhuyenMai_Phim>(new Action<KhuyenMai_Phim>(this.attach_KhuyenMai_Phims), new Action<KhuyenMai_Phim>(this.detach_KhuyenMai_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKM
		{
			get
			{
				return this._MaKM;
			}
			set
			{
				if ((this._MaKM != value))
				{
					this.OnMaKMChanging(value);
					this.SendPropertyChanging();
					this._MaKM = value;
					this.SendPropertyChanged("MaKM");
					this.OnMaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(200)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(500)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramGiam", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> PhanTramGiam
		{
			get
			{
				return this._PhanTramGiam;
			}
			set
			{
				if ((this._PhanTramGiam != value))
				{
					this.OnPhanTramGiamChanging(value);
					this.SendPropertyChanging();
					this._PhanTramGiam = value;
					this.SendPropertyChanged("PhanTramGiam");
					this.OnPhanTramGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_KhuyenMai_Phim", Storage="_KhuyenMai_Phims", ThisKey="MaKM", OtherKey="MaKM")]
		public EntitySet<KhuyenMai_Phim> KhuyenMai_Phims
		{
			get
			{
				return this._KhuyenMai_Phims;
			}
			set
			{
				this._KhuyenMai_Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhuyenMai_Phims(KhuyenMai_Phim entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_KhuyenMai_Phims(KhuyenMai_Phim entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai_Phim")]
	public partial class KhuyenMai_Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKM;
		
		private int _MaPhim;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKMChanging(int value);
    partial void OnMaKMChanged();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    #endregion
		
		public KhuyenMai_Phim()
		{
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKM
		{
			get
			{
				return this._MaKM;
			}
			set
			{
				if ((this._MaKM != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKMChanging(value);
					this.SendPropertyChanging();
					this._MaKM = value;
					this.SendPropertyChanged("MaKM");
					this.OnMaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_KhuyenMai_Phim", Storage="_KhuyenMai", ThisKey="MaKM", OtherKey="MaKM", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.KhuyenMai_Phims.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.KhuyenMai_Phims.Add(this);
						this._MaKM = value.MaKM;
					}
					else
					{
						this._MaKM = default(int);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KhuyenMai_Phim", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.KhuyenMai_Phims.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.KhuyenMai_Phims.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichChieu")]
	public partial class LichChieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLichChieu;
		
		private System.Nullable<int> _MaPhim;
		
		private System.Nullable<int> _MaPhong;
		
		private System.DateTime _NgayChieu;
		
		private System.Nullable<System.DateTime> _GioBatDau;
		
		private System.Nullable<System.DateTime> _GioKetThuc;
		
		private string _TrangThai;
		
		private System.Nullable<decimal> _GiaVe;
		
		private EntitySet<ChiTietHoaDonVe> _ChiTietHoaDonVes;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<PhongChieu> _PhongChieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichChieuChanging(int value);
    partial void OnMaLichChieuChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnMaPhongChanging(System.Nullable<int> value);
    partial void OnMaPhongChanged();
    partial void OnNgayChieuChanging(System.DateTime value);
    partial void OnNgayChieuChanged();
    partial void OnGioBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnGioBatDauChanged();
    partial void OnGioKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnGioKetThucChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnGiaVeChanging(System.Nullable<decimal> value);
    partial void OnGiaVeChanged();
    #endregion
		
		public LichChieu()
		{
			this._ChiTietHoaDonVes = new EntitySet<ChiTietHoaDonVe>(new Action<ChiTietHoaDonVe>(this.attach_ChiTietHoaDonVes), new Action<ChiTietHoaDonVe>(this.detach_ChiTietHoaDonVes));
			this._Phim = default(EntityRef<Phim>);
			this._PhongChieu = default(EntityRef<PhongChieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLichChieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLichChieu
		{
			get
			{
				return this._MaLichChieu;
			}
			set
			{
				if ((this._MaLichChieu != value))
				{
					this.OnMaLichChieuChanging(value);
					this.SendPropertyChanging();
					this._MaLichChieu = value;
					this.SendPropertyChanged("MaLichChieu");
					this.OnMaLichChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int")]
		public System.Nullable<int> MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PhongChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayChieu", DbType="DateTime NOT NULL")]
		public System.DateTime NgayChieu
		{
			get
			{
				return this._NgayChieu;
			}
			set
			{
				if ((this._NgayChieu != value))
				{
					this.OnNgayChieuChanging(value);
					this.SendPropertyChanging();
					this._NgayChieu = value;
					this.SendPropertyChanged("NgayChieu");
					this.OnNgayChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> GioBatDau
		{
			get
			{
				return this._GioBatDau;
			}
			set
			{
				if ((this._GioBatDau != value))
				{
					this.OnGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._GioBatDau = value;
					this.SendPropertyChanged("GioBatDau");
					this.OnGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> GioKetThuc
		{
			get
			{
				return this._GioKetThuc;
			}
			set
			{
				if ((this._GioKetThuc != value))
				{
					this.OnGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._GioKetThuc = value;
					this.SendPropertyChanged("GioKetThuc");
					this.OnGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaVe", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieu_ChiTietHoaDonVe", Storage="_ChiTietHoaDonVes", ThisKey="MaLichChieu", OtherKey="MaLichChieu")]
		public EntitySet<ChiTietHoaDonVe> ChiTietHoaDonVes
		{
			get
			{
				return this._ChiTietHoaDonVes;
			}
			set
			{
				this._ChiTietHoaDonVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_LichChieu", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.LichChieus.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.LichChieus.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieu_LichChieu", Storage="_PhongChieu", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public PhongChieu PhongChieu
		{
			get
			{
				return this._PhongChieu.Entity;
			}
			set
			{
				PhongChieu previousValue = this._PhongChieu.Entity;
				if (((previousValue != value) 
							|| (this._PhongChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongChieu.Entity = null;
						previousValue.LichChieus.Remove(this);
					}
					this._PhongChieu.Entity = value;
					if ((value != null))
					{
						value.LichChieus.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongChieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.LichChieu = this;
		}
		
		private void detach_ChiTietHoaDonVes(ChiTietHoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.LichChieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatHang")]
	public partial class MatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHang;
		
		private string _TenHang;
		
		private string _LoaiHang;
		
		private string _DonViNhap;
		
		private string _DonViBan;
		
		private decimal _GiaNhap;
		
		private decimal _GiaBan;
		
		private string _GhiChu;
		
		private string _HinhAnh;
		
		private EntitySet<ChiTietCombo> _ChiTietCombos;
		
		private EntitySet<ChiTietHoaDonDoAn> _ChiTietHoaDonDoAns;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntitySet<Kho> _Khos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OnLoaiHangChanging(string value);
    partial void OnLoaiHangChanged();
    partial void OnDonViNhapChanging(string value);
    partial void OnDonViNhapChanged();
    partial void OnDonViBanChanging(string value);
    partial void OnDonViBanChanged();
    partial void OnGiaNhapChanging(decimal value);
    partial void OnGiaNhapChanged();
    partial void OnGiaBanChanging(decimal value);
    partial void OnGiaBanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public MatHang()
		{
			this._ChiTietCombos = new EntitySet<ChiTietCombo>(new Action<ChiTietCombo>(this.attach_ChiTietCombos), new Action<ChiTietCombo>(this.detach_ChiTietCombos));
			this._ChiTietHoaDonDoAns = new EntitySet<ChiTietHoaDonDoAn>(new Action<ChiTietHoaDonDoAn>(this.attach_ChiTietHoaDonDoAns), new Action<ChiTietHoaDonDoAn>(this.detach_ChiTietHoaDonDoAns));
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._Khos = new EntitySet<Kho>(new Action<Kho>(this.attach_Khos), new Action<Kho>(this.detach_Khos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiHang
		{
			get
			{
				return this._LoaiHang;
			}
			set
			{
				if ((this._LoaiHang != value))
				{
					this.OnLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._LoaiHang = value;
					this.SendPropertyChanged("LoaiHang");
					this.OnLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DonViNhap
		{
			get
			{
				return this._DonViNhap;
			}
			set
			{
				if ((this._DonViNhap != value))
				{
					this.OnDonViNhapChanging(value);
					this.SendPropertyChanging();
					this._DonViNhap = value;
					this.SendPropertyChanged("DonViNhap");
					this.OnDonViNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DonViBan
		{
			get
			{
				return this._DonViBan;
			}
			set
			{
				if ((this._DonViBan != value))
				{
					this.OnDonViBanChanging(value);
					this.SendPropertyChanging();
					this._DonViBan = value;
					this.SendPropertyChanged("DonViBan");
					this.OnDonViBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Decimal(18,0) NOT NULL")]
		public decimal GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0) NOT NULL")]
		public decimal GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietCombo", Storage="_ChiTietCombos", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this._ChiTietCombos;
			}
			set
			{
				this._ChiTietCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonDoAn", Storage="_ChiTietHoaDonDoAns", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<ChiTietHoaDonDoAn> ChiTietHoaDonDoAns
		{
			get
			{
				return this._ChiTietHoaDonDoAns;
			}
			set
			{
				this._ChiTietHoaDonDoAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_Kho", Storage="_Khos", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<Kho> Khos
		{
			get
			{
				return this._Khos;
			}
			set
			{
				this._Khos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_ChiTietHoaDonDoAns(ChiTietHoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietHoaDonDoAns(ChiTietHoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _Email;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_PhieuNhaps", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _HoTen;
		
		private string _ChucVu;
		
		private string _DienThoai;
		
		private string _Email;
		
		private string _MatKhau;
		
		private string _TrangThai;
		
		private System.Nullable<int> _MaRap;
		
		private EntitySet<BangLuong> _BangLuongs;
		
		private EntitySet<ChamCong> _ChamCongs;
		
		private EntitySet<HoaDonDoAn> _HoaDonDoAns;
		
		private EntitySet<HoaDonVe> _HoaDonVes;
		
		private EntitySet<HopDong> _HopDongs;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
		private EntityRef<Rap> _Rap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaRapChanging(System.Nullable<int> value);
    partial void OnMaRapChanged();
    #endregion
		
		public NhanVien()
		{
			this._BangLuongs = new EntitySet<BangLuong>(new Action<BangLuong>(this.attach_BangLuongs), new Action<BangLuong>(this.detach_BangLuongs));
			this._ChamCongs = new EntitySet<ChamCong>(new Action<ChamCong>(this.attach_ChamCongs), new Action<ChamCong>(this.detach_ChamCongs));
			this._HoaDonDoAns = new EntitySet<HoaDonDoAn>(new Action<HoaDonDoAn>(this.attach_HoaDonDoAns), new Action<HoaDonDoAn>(this.detach_HoaDonDoAns));
			this._HoaDonVes = new EntitySet<HoaDonVe>(new Action<HoaDonVe>(this.attach_HoaDonVes), new Action<HoaDonVe>(this.detach_HoaDonVes));
			this._HopDongs = new EntitySet<HopDong>(new Action<HopDong>(this.attach_HopDongs), new Action<HopDong>(this.detach_HopDongs));
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			this._Rap = default(EntityRef<Rap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRap", DbType="Int")]
		public System.Nullable<int> MaRap
		{
			get
			{
				return this._MaRap;
			}
			set
			{
				if ((this._MaRap != value))
				{
					if (this._Rap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRapChanging(value);
					this.SendPropertyChanging();
					this._MaRap = value;
					this.SendPropertyChanged("MaRap");
					this.OnMaRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangLuong", Storage="_BangLuongs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<BangLuong> BangLuongs
		{
			get
			{
				return this._BangLuongs;
			}
			set
			{
				this._BangLuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ChamCong", Storage="_ChamCongs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<ChamCong> ChamCongs
		{
			get
			{
				return this._ChamCongs;
			}
			set
			{
				this._ChamCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonDoAn", Storage="_HoaDonDoAns", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDonDoAn> HoaDonDoAns
		{
			get
			{
				return this._HoaDonDoAns;
			}
			set
			{
				this._HoaDonDoAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonVe", Storage="_HoaDonVes", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDonVe> HoaDonVes
		{
			get
			{
				return this._HoaDonVes;
			}
			set
			{
				this._HoaDonVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HopDong", Storage="_HopDongs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HopDong> HopDongs
		{
			get
			{
				return this._HopDongs;
			}
			set
			{
				this._HopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_PhieuNhaps", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_NhanVien", Storage="_Rap", ThisKey="MaRap", OtherKey="MaRap", IsForeignKey=true)]
		public Rap Rap
		{
			get
			{
				return this._Rap.Entity;
			}
			set
			{
				Rap previousValue = this._Rap.Entity;
				if (((previousValue != value) 
							|| (this._Rap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rap.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Rap.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaRap = value.MaRap;
					}
					else
					{
						this._MaRap = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangLuongs(BangLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_BangLuongs(BangLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonDoAns(HoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonDoAns(HoaDonDoAn entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonVes(HoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonVes(HoaDonVe entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HopDongs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HopDongs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaPhanPhoi")]
	public partial class NhaPhanPhoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNPP;
		
		private string _TenNPP;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private EntitySet<GiayPhepPhatHanh> _GiayPhepPhatHanhs;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNPPChanging(int value);
    partial void OnMaNPPChanged();
    partial void OnTenNPPChanging(string value);
    partial void OnTenNPPChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public NhaPhanPhoi()
		{
			this._GiayPhepPhatHanhs = new EntitySet<GiayPhepPhatHanh>(new Action<GiayPhepPhatHanh>(this.attach_GiayPhepPhatHanhs), new Action<GiayPhepPhatHanh>(this.detach_GiayPhepPhatHanhs));
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNPP
		{
			get
			{
				return this._MaNPP;
			}
			set
			{
				if ((this._MaNPP != value))
				{
					this.OnMaNPPChanging(value);
					this.SendPropertyChanging();
					this._MaNPP = value;
					this.SendPropertyChanged("MaNPP");
					this.OnMaNPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNPP", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenNPP
		{
			get
			{
				return this._TenNPP;
			}
			set
			{
				if ((this._TenNPP != value))
				{
					this.OnTenNPPChanging(value);
					this.SendPropertyChanging();
					this._TenNPP = value;
					this.SendPropertyChanged("TenNPP");
					this.OnTenNPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaPhanPhoi_GiayPhepPhatHanh", Storage="_GiayPhepPhatHanhs", ThisKey="MaNPP", OtherKey="MaNPP")]
		public EntitySet<GiayPhepPhatHanh> GiayPhepPhatHanhs
		{
			get
			{
				return this._GiayPhepPhatHanhs;
			}
			set
			{
				this._GiayPhepPhatHanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaPhanPhoi_Phim", Storage="_Phims", ThisKey="MaNPP", OtherKey="MaNPP")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiayPhepPhatHanhs(GiayPhepPhatHanh entity)
		{
			this.SendPropertyChanging();
			entity.NhaPhanPhoi = this;
		}
		
		private void detach_GiayPhepPhatHanhs(GiayPhepPhatHanh entity)
		{
			this.SendPropertyChanging();
			entity.NhaPhanPhoi = null;
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.NhaPhanPhoi = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.NhaPhanPhoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanPhoiPhim")]
	public partial class PhanPhoiPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhim;
		
		private int _MaRap;
		
		private System.DateTime _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<Rap> _Rap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnMaRapChanging(int value);
    partial void OnMaRapChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public PhanPhoiPhim()
		{
			this._Phim = default(EntityRef<Phim>);
			this._Rap = default(EntityRef<Rap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaRap
		{
			get
			{
				return this._MaRap;
			}
			set
			{
				if ((this._MaRap != value))
				{
					if (this._Rap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRapChanging(value);
					this.SendPropertyChanging();
					this._MaRap = value;
					this.SendPropertyChanged("MaRap");
					this.OnMaRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_PhanPhoiPhim", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.PhanPhoiPhims.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.PhanPhoiPhims.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_PhanPhoiPhim", Storage="_Rap", ThisKey="MaRap", OtherKey="MaRap", IsForeignKey=true)]
		public Rap Rap
		{
			get
			{
				return this._Rap.Entity;
			}
			set
			{
				Rap previousValue = this._Rap.Entity;
				if (((previousValue != value) 
							|| (this._Rap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rap.Entity = null;
						previousValue.PhanPhoiPhims.Remove(this);
					}
					this._Rap.Entity = value;
					if ((value != null))
					{
						value.PhanPhoiPhims.Add(this);
						this._MaRap = value.MaRap;
					}
					else
					{
						this._MaRap = default(int);
					}
					this.SendPropertyChanged("Rap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuNhap;
		
		private System.DateTime _NgayNhap;
		
		private int _MaNCC;
		
		private System.Nullable<int> _MaNV;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuNhapChanging(int value);
    partial void OnMaPhieuNhapChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuNhap
		{
			get
			{
				return this._MaPhieuNhap;
			}
			set
			{
				if ((this._MaPhieuNhap != value))
				{
					this.OnMaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuNhap = value;
					this.SendPropertyChanged("MaPhieuNhap");
					this.OnMaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Int NOT NULL")]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhim;
		
		private string _TenPhim;
		
		private System.Nullable<int> _ThoiLuong;
		
		private string _TrangThai;
		
		private string _HinhAnh;
		
		private string _MoTa;
		
		private int _MaNPP;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<GiayPhepPhatHanh> _GiayPhepPhatHanhs;
		
		private EntitySet<KhuyenMai_Phim> _KhuyenMai_Phims;
		
		private EntitySet<LichChieu> _LichChieus;
		
		private EntitySet<PhanPhoiPhim> _PhanPhoiPhims;
		
		private EntitySet<Phim_TheLoai> _Phim_TheLoais;
		
		private EntityRef<NhaPhanPhoi> _NhaPhanPhoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnThoiLuongChanging(System.Nullable<int> value);
    partial void OnThoiLuongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMaNPPChanging(int value);
    partial void OnMaNPPChanged();
    #endregion
		
		public Phim()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._GiayPhepPhatHanhs = new EntitySet<GiayPhepPhatHanh>(new Action<GiayPhepPhatHanh>(this.attach_GiayPhepPhatHanhs), new Action<GiayPhepPhatHanh>(this.detach_GiayPhepPhatHanhs));
			this._KhuyenMai_Phims = new EntitySet<KhuyenMai_Phim>(new Action<KhuyenMai_Phim>(this.attach_KhuyenMai_Phims), new Action<KhuyenMai_Phim>(this.detach_KhuyenMai_Phims));
			this._LichChieus = new EntitySet<LichChieu>(new Action<LichChieu>(this.attach_LichChieus), new Action<LichChieu>(this.detach_LichChieus));
			this._PhanPhoiPhims = new EntitySet<PhanPhoiPhim>(new Action<PhanPhoiPhim>(this.attach_PhanPhoiPhims), new Action<PhanPhoiPhim>(this.detach_PhanPhoiPhims));
			this._Phim_TheLoais = new EntitySet<Phim_TheLoai>(new Action<Phim_TheLoai>(this.attach_Phim_TheLoais), new Action<Phim_TheLoai>(this.detach_Phim_TheLoais));
			this._NhaPhanPhoi = default(EntityRef<NhaPhanPhoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="Int")]
		public System.Nullable<int> ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(500)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPP", DbType="Int NOT NULL")]
		public int MaNPP
		{
			get
			{
				return this._MaNPP;
			}
			set
			{
				if ((this._MaNPP != value))
				{
					if (this._NhaPhanPhoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNPPChanging(value);
					this.SendPropertyChanging();
					this._MaNPP = value;
					this.SendPropertyChanged("MaNPP");
					this.OnMaNPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_DanhGia", Storage="_DanhGias", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_GiayPhepPhatHanh", Storage="_GiayPhepPhatHanhs", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<GiayPhepPhatHanh> GiayPhepPhatHanhs
		{
			get
			{
				return this._GiayPhepPhatHanhs;
			}
			set
			{
				this._GiayPhepPhatHanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KhuyenMai_Phim", Storage="_KhuyenMai_Phims", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<KhuyenMai_Phim> KhuyenMai_Phims
		{
			get
			{
				return this._KhuyenMai_Phims;
			}
			set
			{
				this._KhuyenMai_Phims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_LichChieu", Storage="_LichChieus", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<LichChieu> LichChieus
		{
			get
			{
				return this._LichChieus;
			}
			set
			{
				this._LichChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_PhanPhoiPhim", Storage="_PhanPhoiPhims", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<PhanPhoiPhim> PhanPhoiPhims
		{
			get
			{
				return this._PhanPhoiPhims;
			}
			set
			{
				this._PhanPhoiPhims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_Phim_TheLoai", Storage="_Phim_TheLoais", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<Phim_TheLoai> Phim_TheLoais
		{
			get
			{
				return this._Phim_TheLoais;
			}
			set
			{
				this._Phim_TheLoais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaPhanPhoi_Phim", Storage="_NhaPhanPhoi", ThisKey="MaNPP", OtherKey="MaNPP", IsForeignKey=true)]
		public NhaPhanPhoi NhaPhanPhoi
		{
			get
			{
				return this._NhaPhanPhoi.Entity;
			}
			set
			{
				NhaPhanPhoi previousValue = this._NhaPhanPhoi.Entity;
				if (((previousValue != value) 
							|| (this._NhaPhanPhoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaPhanPhoi.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._NhaPhanPhoi.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaNPP = value.MaNPP;
					}
					else
					{
						this._MaNPP = default(int);
					}
					this.SendPropertyChanged("NhaPhanPhoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_GiayPhepPhatHanhs(GiayPhepPhatHanh entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_GiayPhepPhatHanhs(GiayPhepPhatHanh entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_KhuyenMai_Phims(KhuyenMai_Phim entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_KhuyenMai_Phims(KhuyenMai_Phim entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_PhanPhoiPhims(PhanPhoiPhim entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_PhanPhoiPhims(PhanPhoiPhim entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_Phim_TheLoais(Phim_TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_Phim_TheLoais(Phim_TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim_TheLoai")]
	public partial class Phim_TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhim;
		
		private int _MaTheLoai;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnMaTheLoaiChanging(int value);
    partial void OnMaTheLoaiChanged();
    #endregion
		
		public Phim_TheLoai()
		{
			this._Phim = default(EntityRef<Phim>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_Phim_TheLoai", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.Phim_TheLoais.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.Phim_TheLoais.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim_TheLoai", Storage="_TheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Phim_TheLoais.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Phim_TheLoais.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(int);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongChieu")]
	public partial class PhongChieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhong;
		
		private string _TenPhong;
		
		private System.Nullable<int> _SuaChua;
		
		private System.Nullable<int> _MaRap;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntitySet<LichChieu> _LichChieus;
		
		private EntityRef<Rap> _Rap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(int value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnSuaChuaChanging(System.Nullable<int> value);
    partial void OnSuaChuaChanged();
    partial void OnMaRapChanging(System.Nullable<int> value);
    partial void OnMaRapChanged();
    #endregion
		
		public PhongChieu()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._LichChieus = new EntitySet<LichChieu>(new Action<LichChieu>(this.attach_LichChieus), new Action<LichChieu>(this.detach_LichChieus));
			this._Rap = default(EntityRef<Rap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(50)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuaChua", DbType="Int")]
		public System.Nullable<int> SuaChua
		{
			get
			{
				return this._SuaChua;
			}
			set
			{
				if ((this._SuaChua != value))
				{
					this.OnSuaChuaChanging(value);
					this.SendPropertyChanging();
					this._SuaChua = value;
					this.SendPropertyChanged("SuaChua");
					this.OnSuaChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRap", DbType="Int")]
		public System.Nullable<int> MaRap
		{
			get
			{
				return this._MaRap;
			}
			set
			{
				if ((this._MaRap != value))
				{
					if (this._Rap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRapChanging(value);
					this.SendPropertyChanging();
					this._MaRap = value;
					this.SendPropertyChanged("MaRap");
					this.OnMaRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieu_Ghe", Storage="_Ghes", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieu_LichChieu", Storage="_LichChieus", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<LichChieu> LichChieus
		{
			get
			{
				return this._LichChieus;
			}
			set
			{
				this._LichChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_PhongChieu", Storage="_Rap", ThisKey="MaRap", OtherKey="MaRap", IsForeignKey=true)]
		public Rap Rap
		{
			get
			{
				return this._Rap.Entity;
			}
			set
			{
				Rap previousValue = this._Rap.Entity;
				if (((previousValue != value) 
							|| (this._Rap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rap.Entity = null;
						previousValue.PhongChieus.Remove(this);
					}
					this._Rap.Entity = value;
					if ((value != null))
					{
						value.PhongChieus.Add(this);
						this._MaRap = value.MaRap;
					}
					else
					{
						this._MaRap = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieu = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieu = null;
		}
		
		private void attach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieu = this;
		}
		
		private void detach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rap")]
	public partial class Rap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaRap;
		
		private string _TenRap;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntitySet<PhanPhoiPhim> _PhanPhoiPhims;
		
		private EntitySet<PhongChieu> _PhongChieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaRapChanging(int value);
    partial void OnMaRapChanged();
    partial void OnTenRapChanging(string value);
    partial void OnTenRapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public Rap()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._PhanPhoiPhims = new EntitySet<PhanPhoiPhim>(new Action<PhanPhoiPhim>(this.attach_PhanPhoiPhims), new Action<PhanPhoiPhim>(this.detach_PhanPhoiPhims));
			this._PhongChieus = new EntitySet<PhongChieu>(new Action<PhongChieu>(this.attach_PhongChieus), new Action<PhongChieu>(this.detach_PhongChieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaRap
		{
			get
			{
				return this._MaRap;
			}
			set
			{
				if ((this._MaRap != value))
				{
					this.OnMaRapChanging(value);
					this.SendPropertyChanging();
					this._MaRap = value;
					this.SendPropertyChanged("MaRap");
					this.OnMaRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRap", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenRap
		{
			get
			{
				return this._TenRap;
			}
			set
			{
				if ((this._TenRap != value))
				{
					this.OnTenRapChanging(value);
					this.SendPropertyChanging();
					this._TenRap = value;
					this.SendPropertyChanged("TenRap");
					this.OnTenRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_NhanVien", Storage="_NhanViens", ThisKey="MaRap", OtherKey="MaRap")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_PhanPhoiPhim", Storage="_PhanPhoiPhims", ThisKey="MaRap", OtherKey="MaRap")]
		public EntitySet<PhanPhoiPhim> PhanPhoiPhims
		{
			get
			{
				return this._PhanPhoiPhims;
			}
			set
			{
				this._PhanPhoiPhims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_PhongChieu", Storage="_PhongChieus", ThisKey="MaRap", OtherKey="MaRap")]
		public EntitySet<PhongChieu> PhongChieus
		{
			get
			{
				return this._PhongChieus;
			}
			set
			{
				this._PhongChieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Rap = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Rap = null;
		}
		
		private void attach_PhanPhoiPhims(PhanPhoiPhim entity)
		{
			this.SendPropertyChanging();
			entity.Rap = this;
		}
		
		private void detach_PhanPhoiPhims(PhanPhoiPhim entity)
		{
			this.SendPropertyChanging();
			entity.Rap = null;
		}
		
		private void attach_PhongChieus(PhongChieu entity)
		{
			this.SendPropertyChanging();
			entity.Rap = this;
		}
		
		private void detach_PhongChieus(PhongChieu entity)
		{
			this.SendPropertyChanging();
			entity.Rap = null;
		}
	}
}
#pragma warning restore 1591
